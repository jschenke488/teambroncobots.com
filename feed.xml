<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="https://teambroncobots.com//feed.xml" rel="self" type="application/atom+xml" /><link href="https://teambroncobots.com//" rel="alternate" type="text/html" hreflang="en" /><updated>2022-12-07T17:44:16+00:00</updated><id>https://teambroncobots.com//feed.xml</id><title type="html">Broncobots FRC Team 1987</title><subtitle>Broncobots webste FRC Team 1987
</subtitle><entry><title type="html">Creating a post series</title><link href="https://teambroncobots.com//2021/10/30/creating-a-post-series/" rel="alternate" type="text/html" title="Creating a post series" /><published>2021-10-30T09:00:07+00:00</published><updated>2021-10-30T09:00:07+00:00</updated><id>https://teambroncobots.com//2021/10/30/creating-a-post-series</id><content type="html" xml:base="https://teambroncobots.com//2021/10/30/creating-a-post-series/"><![CDATA[<p>From version 0.12, you can now make a post a part of a series of posts, linking to the other posts in the series, by creating a <code class="language-plaintext highlighter-rouge">series</code> data file and then setting the series in each of the post’s front matter.</p>

<p>The current post in the list is highlighted to help give context of where you are in the series.</p>

<h2 id="blog-series-data-file">Blog Series Data File</h2>

<p>Start by creating a yml file in the _data directory, for example <code class="language-plaintext highlighter-rouge">my_blog_series.yml</code>. Give the series a title and, optionally, a description.</p>

<h2 id="sections">Sections</h2>

<p>Next add sections. Each section can have a label (optional) and items. Each item is the title of an existing blog post. If the title is not found then the link will be empty.</p>

<p>If you just want one list without labels, then omit the label and just add the items.</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">title</span><span class="pi">:</span> <span class="s">The series title</span>
<span class="na">sections</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">items</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="na">title</span><span class="pi">:</span> <span class="s">Why use a static site generator</span>
      <span class="pi">-</span> <span class="na">title</span><span class="pi">:</span> <span class="s">Getting started with Broncobots for Jekyll</span>
</code></pre></div></div>

<p>Here is a full example with multiple sections with labels.</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">title</span><span class="pi">:</span> <span class="s">The series title</span>
<span class="na">description</span><span class="pi">:</span> <span class="s">The series description text</span>
<span class="na">sections</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">label</span><span class="pi">:</span> <span class="s">The first section</span>
    <span class="na">items</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="na">title</span><span class="pi">:</span> <span class="s">Why use a static site generator</span>
      <span class="pi">-</span> <span class="na">title</span><span class="pi">:</span> <span class="s">Getting started with Broncobots for Jekyll</span>
  <span class="pi">-</span> <span class="na">label</span><span class="pi">:</span> <span class="s">Another section</span>
    <span class="na">items</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="na">title</span><span class="pi">:</span> <span class="s">Introducing some new layouts to Broncobots</span>
      <span class="pi">-</span> <span class="na">title</span><span class="pi">:</span> <span class="s">Creating a docs site with Broncobots</span>
      <span class="pi">-</span> <span class="na">title</span><span class="pi">:</span> <span class="s">Creating a post series</span>
</code></pre></div></div>

<h2 id="update-your-posts">Update your posts</h2>

<p>Finally, add the series setting to your front matter in each post you want the series to show in.</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">series</span><span class="pi">:</span> <span class="s">my_blog_series</span>
</code></pre></div></div>]]></content><author><name>C.S. Rhymes</name></author><category term="bulma-clean-theme" /><category term="jekyll" /><category term="blog" /><summary type="html"><![CDATA[How to create a post series with Broncobots]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://teambroncobots.com//bulma-clean-theme/img/blog-post-series.jpg" /><media:content medium="image" url="https://teambroncobots.com//bulma-clean-theme/img/blog-post-series.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Creating a docs site with Broncobots</title><link href="https://teambroncobots.com//2020/05/08/creating-a-docs-site-with-bulma-clean-theme/" rel="alternate" type="text/html" title="Creating a docs site with Broncobots" /><published>2020-05-08T09:00:07+00:00</published><updated>2020-05-08T09:00:07+00:00</updated><id>https://teambroncobots.com//2020/05/08/creating-a-docs-site-with-bulma-clean-theme</id><content type="html" xml:base="https://teambroncobots.com//2020/05/08/creating-a-docs-site-with-bulma-clean-theme/"><![CDATA[<p>I created Broncobots as a theme for my own website and decided to open source it so others could use it as well. One of the key things I wanted to do was to create a theme that worked with GitHub Pages, which also means that you can also use it as a docs site for your project.</p>

<h2 id="github-pages-configuration">GitHub Pages Configuration</h2>

<p>GitHub pages allows you to create a website for your project with free hosting. Go to your repo on GitHub, then click Settings, then scroll down to the GitHub Pages section. You have the option to create a site from the root of your master branch of from the /docs directory in your master branch. For this example, we are going to use the /docs directory.</p>

<p>Don’t change this setting just yet as if you don’t have a docs directory there will be nothing there to publish.</p>

<h2 id="creating-the-docs-directory">Creating the docs directory</h2>

<p>Clone your git repo to a local directory, let’s say <code class="language-plaintext highlighter-rouge">~/code/my-project</code> for this example. The below assumes you don’t yet have a docs directory and you have <a href="https://jekyllrb.com/docs/installation/">jekyll installed</a>. If you do already have a docs directory you will have to rename it to something else.</p>

<p>Create a new jekyll installation in the docs directory, ensuring you replace your username and project name in the below example.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git clone https://github.com/username/my-project.git ~/code/my-project
<span class="nb">cd</span> ~/code/my-project
jekyll new docs
</code></pre></div></div>

<p>You should now have a base install of Jekyll in your freshly created docs directory.</p>

<h2 id="configuring-the-theme">Configuring the theme</h2>

<ol>
  <li>Replace everything in the Gemfile with the following
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>source 'https://rubygems.org'
gem "bulma-clean-theme",  '0.7.2'
gem 'github-pages', group: :jekyll_plugins
</code></pre></div>    </div>
  </li>
  <li>Open the <code class="language-plaintext highlighter-rouge">_config.yml</code> and comment out or delete the line <code class="language-plaintext highlighter-rouge">theme: minima</code> and replace it with <code class="language-plaintext highlighter-rouge">remote_theme: chrisrhymes/bulma-clean-theme</code>, then add <code class="language-plaintext highlighter-rouge">github-pages</code> to the list of plugins. Update the baseurl to your GitHub repo name, in this example we are using <code class="language-plaintext highlighter-rouge">my-project</code> as the repo name
    <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#theme: minima</span>
<span class="na">remote_theme</span><span class="pi">:</span> <span class="s">chrisrhymes/bulma-clean-theme</span>
<span class="na">baseurl</span><span class="pi">:</span> <span class="s2">"</span><span class="s">/my-project"</span>
<span class="na">plugins</span><span class="pi">:</span>
<span class="pi">-</span> <span class="s">github-pages</span>
</code></pre></div>    </div>
  </li>
  <li>Open the <code class="language-plaintext highlighter-rouge">index.md</code> file and update the front matter so the layout is page and then add a title
    <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">layout</span><span class="pi">:</span> <span class="s">page</span>
<span class="na">title</span><span class="pi">:</span> <span class="s">Docs for My Project</span>
</code></pre></div>    </div>
  </li>
  <li>
    <p>Run <code class="language-plaintext highlighter-rouge">bundle install</code> and then <code class="language-plaintext highlighter-rouge">bundle exec jekyll serve</code></p>
  </li>
  <li>Visit <code class="language-plaintext highlighter-rouge">http://localhost:4000/my-project/</code> to view your new docs page.</li>
</ol>

<h2 id="menu">Menu</h2>

<p>To create a menu on the left on your docs page you need to create a new yaml file in _data directory, such as <code class="language-plaintext highlighter-rouge">menu.yaml</code> and then use the below format, where the label will be the menu title and the items are the menu items. Each menu item can have a list of sub menu items if needed.</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="pi">-</span> <span class="na">label</span><span class="pi">:</span> <span class="s">Example Menu</span>
  <span class="na">items</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Menu item</span>
      <span class="na">link</span><span class="pi">:</span> <span class="s">/link/</span>
      <span class="na">items</span><span class="pi">:</span>
        <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Sub menu item</span>
          <span class="na">link</span><span class="pi">:</span> <span class="s">/sub-menu-item/</span>
</code></pre></div></div>

<h2 id="table-of-contents">Table of contents</h2>

<p>If you would like auto generated table of contents for your docs page then add <code class="language-plaintext highlighter-rouge">toc: true</code> to the page’s front matter. The table of contents works for markdown pages and loops through the heading 2s and heading 3s in the markdown and then auto generates the contents.</p>

<h2 id="github-sponsors">GitHub Sponsors</h2>

<p>If you want to link to your GitHub sponsors profile then add <code class="language-plaintext highlighter-rouge">gh_sponsor</code> with your username to the <code class="language-plaintext highlighter-rouge">_config.yml</code> file.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gh_sponsor: chrisrhymes
</code></pre></div></div>

<h2 id="making-the-docs-page-live">Making the docs page live</h2>

<p>Once you have finished creating your docs page you can commit your changes and push everything up to GitHub. Go back to the GitHub settings page and scroll back down to the GitHub Pages section. Now we can update the setting to use the Master branch /docs folder and then GitHub will build your new docs page.</p>

<h2 id="want-to-see-an-example">Want to see an example?</h2>

<p>I recently updated one of my own packages to use Broncobots to power the docs page. Check out the docs for <a href="https://www.csrhymes.com/bulma-block-list">Bulma Block List</a> as an example.</p>]]></content><author><name>C.S. Rhymes</name></author><category term="bulma-clean-theme" /><category term="jekyll" /><category term="docs" /><summary type="html"><![CDATA[How to create a docs site for your project with Broncobots]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.csrhymes.com/img/example-docs-page.jpg" /><media:content medium="image" url="https://www.csrhymes.com/img/example-docs-page.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Getting started with Broncobots for Jekyll</title><link href="https://teambroncobots.com//development/2019/02/09/getting-started-with-bulma-clean-theme/" rel="alternate" type="text/html" title="Getting started with Broncobots for Jekyll" /><published>2019-02-09T20:00:07+00:00</published><updated>2019-02-09T20:00:07+00:00</updated><id>https://teambroncobots.com//development/2019/02/09/getting-started-with-bulma-clean-theme</id><content type="html" xml:base="https://teambroncobots.com//development/2019/02/09/getting-started-with-bulma-clean-theme/"><![CDATA[<p>I have made a <a href="https://rubygems.org/gems/bulma-clean-theme">theme for Jekyll</a> which is based on the Bulma frontend framework. It might look familiar, because I am also using it for this site. If you like the look of this theme then I thought I would write a little blog post about how to use it for your own site and how you can use it with GitHub Pages.</p>

<h2 id="getting-started">Getting started</h2>

<p>First things first, you need a local instance of Jekyll running on your computer. I’m assuming you are familiar with Jekyll and have everything you need installed. If this is not the case, check out the documentation on the <a href="https://jekyllrb.com/docs/">Jekyll website</a>. For this example, lets call the site myblog.</p>

<p>Create a new installation of Jekyll, then go into the myblog directory:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>jekyll new myblog
<span class="nb">cd </span>myblog
</code></pre></div></div>

<p>Then add the theme to the Gemfile:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gem "bulma-clean-theme"
</code></pre></div></div>

<p>Then add the theme to your _config.yml:</p>
<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">theme</span><span class="pi">:</span> <span class="s">bulma-clean-theme</span>
</code></pre></div></div>

<p>Then run bundle to install everything</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>bundle
</code></pre></div></div>

<p>You can then preview your site by running the usual command</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>bundle <span class="nb">exec </span>jekyll serve
</code></pre></div></div>

<h2 id="creating-pages">Creating pages</h2>

<p>A page can either be a html or a markdown file, as long as you set the frontmatter. There are a few settings that pages can use to customise the default theme a bit further if you so choose.</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nn">---</span>
<span class="na">layout</span><span class="pi">:</span> <span class="s">page</span>
<span class="na">title</span><span class="pi">:</span> <span class="s">Page Title</span>
<span class="na">subtitle</span><span class="pi">:</span> <span class="s">Page Subtitle</span>
<span class="na">image</span><span class="pi">:</span> <span class="s">/path/to/image.jpg</span>
<span class="na">description</span><span class="pi">:</span> <span class="s">The pages meta description</span>
<span class="na">hero_image</span><span class="pi">:</span> <span class="s">/path/to/hero-image.jpg</span>
<span class="na">hero_height</span><span class="pi">:</span> <span class="s">is-fullheight</span>
<span class="nn">---</span>
</code></pre></div></div>

<p>If you don’t set a subtitle, image, hero_image or hero_height then defaults will be used or in the case of the hero_image, no image will be used on the hero.</p>

<p>The theme uses the jekyll-seo-tag plugin so it will use the information you provide in the frontmatter to auto populate the meta tags and open graph tags.</p>

<h2 id="posts">Posts</h2>

<p>Posts are created as per the standard Jekyll method, in a _posts directory, with each post named YYYY-MM-DD-name-of-post.markdown. For the post frontmatter you can use the same settings as a page, except you need to change the layout to post and add date and author settings.</p>

<h2 id="blog-page">Blog page</h2>

<p>For the blog homepage, create a blog.html page with <code class="language-plaintext highlighter-rouge">layout: blog</code> and use the other settings from a normal page. The theme is set up to use jekyll-paginate so you just need to add pagination options to your _config.yml</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Pagination settings</span>
<span class="na">paginate</span><span class="pi">:</span> <span class="m">5</span>
<span class="na">paginate_path</span><span class="pi">:</span> <span class="s2">"</span><span class="s">/blog/page:num"</span>
</code></pre></div></div>

<h2 id="site-defaults">Site defaults</h2>

<p>If you don’t want to set each hero_image individually, then you can set default values in your _config.yml. The below example sets a default author, layout and hero image for every post. It also turns on the side bar on the right of post pages, which will display links to your latest posts.</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">defaults</span><span class="pi">:</span>
  <span class="pi">-</span>
    <span class="na">scope</span><span class="pi">:</span>
      <span class="na">path</span><span class="pi">:</span> <span class="s2">"</span><span class="s">"</span>
      <span class="na">type</span><span class="pi">:</span> <span class="s2">"</span><span class="s">posts"</span>
    <span class="na">values</span><span class="pi">:</span>
      <span class="na">author</span><span class="pi">:</span> <span class="s2">"</span><span class="s">Author</span><span class="nv"> </span><span class="s">Name"</span>
      <span class="na">layout</span><span class="pi">:</span> <span class="s">post</span>
      <span class="na">hero_image</span><span class="pi">:</span> <span class="s">/path/to/hero-image.jpg</span>
      <span class="na">show_sidebar</span><span class="pi">:</span> <span class="no">true</span>
</code></pre></div></div>

<h2 id="styles">Styles</h2>

<p>The theme uses Bulma frontend framework which provides a wide range of sass variable customisations. If you want to overwrite any of the standard variables, such as the primary theme colour, then set a sass variable in a new file in assets/css/app.scss before importing the main stylesheet.</p>

<div class="language-scss highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">---</span><span class="err">
</span><span class="na">---</span><span class="err">
$</span><span class="na">primary</span><span class="p">:</span> <span class="mh">#333333</span><span class="p">;</span>
<span class="c1">// Import Main CSS file from theme</span>
<span class="k">@import</span> <span class="s2">"main"</span><span class="p">;</span>
</code></pre></div></div>

<p>You can also add any of your own custom css to this file if you want to.</p>

<h3 id="navigation">Navigation</h3>

<p>Once you have created posts and pages, you will need to create a way for visitors to access them. The theme makes use of the Bulma navbar, which is configured through a simple yaml file. All you need to do is create a navigation.yml file in <code class="language-plaintext highlighter-rouge">_data</code> directory with the following format with the pages you want to include in the top navigation. You can now also add items to a dropdown menu.</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Page </span><span class="m">1</span>
  <span class="na">link</span><span class="pi">:</span> <span class="s">page-1</span>
<span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Blog</span>
  <span class="na">link</span><span class="pi">:</span> <span class="s">blog</span>
  <span class="na">dropdown</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Page </span><span class="m">2</span>
      <span class="na">link</span><span class="pi">:</span> <span class="s">page-2</span>
</code></pre></div></div>

<p>Bulma is pretty handy in the way it converts the same HTML into a mobile / tablet friendly navigation, so you only need to set the menu up once for all screen sizes.</p>

<h2 id="using-bulma-clean-theme-with-github-pages">Using bulma-clean-theme with Github Pages</h2>

<p>For the site to work with Github Pages, all you need to do is update the _config.yml so it uses remote_theme instead of theme and update it to chrisrhymes/bulma-clean-theme so it knows which GitHub repo to pull the theme from when it builds your site.</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#theme: bulma-clean-theme</span>
<span class="na">remote_theme</span><span class="pi">:</span> <span class="s">chrisrhymes/bulma-clean-theme</span>
</code></pre></div></div>

<p>And then push up your changes to Github as normal.</p>

<p>There seems to be an issue where Jekyll doesn’t work locally with remote_theme, so when working locally you have to add theme back in, but remember to comment theme out again before pushing back up to GitHub or you will probably get a build warning email.</p>

<h2 id="i-hope-youre-not-feeling-overwhelmed">I hope you’re not feeling overwhelmed</h2>

<p>It may seem like there is a lot to do to get started, but really it shouldn’t take very long to get a site up and running. All the options are there just in case you want to further customise the theme to be more personal to you, but you can just use the basic minimal settings to get yourself up and running.</p>

<h2 id="feedback-and-issues">Feedback and Issues</h2>

<p>If you have any feedback, ideas or issues with how the theme could be improved, then please create an issue on the theme’s GitHub page and I will try and take a look into it as soon as I can. The theme is still quite new and I have quite a few ideas for future enhancements, so I will write a new blog post on this site when any new features become available.</p>]]></content><author><name>C.S. Rhymes</name></author><category term="development" /><summary type="html"><![CDATA[Getting started with Broncobots for Jekyll and using it with GitHub Pages]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.csrhymes.com/img/bulma-clean-theme.jpg" /><media:content medium="image" url="https://www.csrhymes.com/img/bulma-clean-theme.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>